---
title: "Code_Used"
author: "lok"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r, eval=TRUE,echo=TRUE}
#1. Which club has the highest average rating of players? 

library(ggplot2)
library(tidyverse)

eafc_data <- read.csv("male_players.csv") %>% select(Name, Nation, Club, Position, Overall, Pace, Shooting, Passing, Dribbling, Defending, Physicality)

club_average_rating <- eafc_data %>%
  group_by(Club) %>%
  summarise(mean_rating = mean(Overall))

club_with_highest_average_rating <- club_average_rating %>%
  arrange(desc(mean_rating))

club_with_highest_average_rating

top_20_clubs <- club_with_highest_average_rating %>% slice_head(n=20)

is_top_five <- club_with_highest_average_rating %>% slice_head(n=5)

# Plot the average rating for the top 50 clubs
# Add labels to the top three clubs
ggplot(top_20_clubs, aes(x = Club, y = mean_rating)) +
  geom_bar(stat = "identity")+
  labs(title = "Average Rating of FC-24 Players by Club (Top 20)", x = "Club", y = "Average Rating") +
  theme_minimal() +  coord_flip() +
  geom_label(aes(label = Club), data = (is_top_five), hjust = 1.5, vjust = 0.5, fill = "white")


ggplot(club_average_rating, aes(x = mean_rating)) +
  geom_histogram(binwidth = 1) +
  labs(title = "Average Rating of FC-24 Players by Club Distribution", x = "Average Rating", y = "Count") +
  theme_minimal() 
```

```{r, eval=TRUE,echo=TRUE}
#2. Which country has the highest count of professional players? 
library(tidyverse)
library(ggplot2)

# Count the number of players from each country
country_player_count <- eafc_data %>%
  group_by(Nation) %>%
  summarise(player_count = n())

# Identify the country with the highest player count
country_with_highest_player_count <- country_player_count %>%
  arrange(desc(player_count)) %>%
  slice_head(n=20)

country_with_highest_player_count

# Plot the player count for each country
ggplot(country_with_highest_player_count, aes(x = Nation, y = player_count)) +
  geom_bar(stat = "identity") +
  labs(title = "Number of FC-24 Players by Country (Top 20)", x = "Country", y = "Number of Players") +
  theme_minimal() + coord_flip()

```

```{r, eval=TRUE,echo=TRUE}
#3. What percentage of players have a overall rating higher than 80, what does that imply? 
number_of_players_with_rating_above_80 <- length(which(eafc_data$Overall > 80))
total_number_of_players <- nrow(eafc_data)
percentage_of_players_with_rating_above_80 <- number_of_players_with_rating_above_80 / total_number_of_players * 100

# Print the percentage
print(percentage_of_players_with_rating_above_80)

ggplot(eafc_data, aes(x = Overall, fill = Position)) +
  geom_density(adjust = 2, alpha = 0.5) +
  labs(title = "Distribution of Overall Ratings in FC-24", x = "Overall Rating", y = "Density") +
  theme_bw()
```

```{r, eval=TRUE,echo=TRUE}
# Radar Chart Shiny APP
library(shiny)
library(fmsb)
library(tidyverse)

eafc_data <- read.csv("male_players.csv") %>% select(Name, Nation, Club, Position, Overall, Pace, Shooting, Passing, Dribbling, Defending, Physicality)

# Define UI
ui <- fluidPage(
  titlePanel("Radar Chart of FC24 Players"),
  sidebarLayout(
    sidebarPanel(
      numericInput("player_number", "Player Number:", value = 12, min = 1, max = 15849),
      downloadButton("download_chart", "Download chart"),
    ),
    mainPanel(
      plotOutput("radarChart"),
    )
  )
)

# Define server
server <- function(input, output) {
  
  scores <- data.frame(
    row.names = c(eafc_data$X),
    Pace = c(eafc_data$Pace),
    Shooting = c(eafc_data$Shooting),
    Passing = c(eafc_data$Passing),
    Dribbling = c(eafc_data$Dribbling),
    Defending = c(eafc_data$Defending),
    Physicality = c(eafc_data$Physicality)
  )
  
  max_min <- data.frame(
    Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
    Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
  )
  
  rownames(max_min) <- c("Max", "Min")
  
  df <- rbind(max_min, scores)
  
  output$radarChart <- renderPlot({
    player_num <- input$player_number
    
    player_radarchart <- df[c("Max", "Min", as.character(player_num)), ]
    
    radarchart(
      player_radarchart,
      pcol = "purple", pfcol = scales::alpha("blue", 0.5), plwd = 2, plty = 1,
      cglcol = "grey", cglty = 2, cglwd = 2,
      title = "Player's Rating"
    )
  })
}

# Run the app
shinyApp(ui = ui, server = server)

```

```{r, eval=TRUE,echo=TRUE}
# Search engine Shiny APP
library(shiny)
library(dplyr)

eafc_data <- read.csv("male_players.csv") %>% select(Name, Nation, Club, Position, Overall, Pace, Shooting, Passing, Dribbling, Defending, Physicality)

ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      textInput("search_query", "Search:"),
      downloadButton("download_chart", "Download chart")
    ),
    mainPanel(
      DT::dataTableOutput("search_result_table")
    )
  )
)

server <- function(input, output) {
  searchData <- reactive({
    result <- eafc_data[grep(input$search_query, eafc_data$"Name", ignore.case = TRUE), ]
    return(result)
  })
  
  output$search_result_table <- DT::renderDataTable({
    searchData()
  })
}

# Run the application 
shinyApp(ui = ui, server = server)
```