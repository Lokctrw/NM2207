)
rownames(max_min) <- c("Max", "Min")
# Bind the variable ranges to the data
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
# Read the data
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"),]
# Create a radar chart
radarchart(selected_player)
# Customize the appearance of the radar chart
labs(title = "Radar Chart of FC24 Players", x = "Overall", y = "Attribute")
# integrate into shiny
library(fmsb)
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
# Bind the variable ranges to the data
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
# Read the data
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"),]
# Create a radar chart
radarchart(selected_player)
# Customize the appearance of the radar chart
labs(title = "Radar Chart of FC24 Players", x = "Overall", y = "Attribute")
knitr::opts_chunk$set(echo = TRUE)
```
# integrate into shiny
library(fmsb)
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
# Bind the variable ranges to the data
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
# Read the data
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"),]
# Create a radar chart
radarchart(selected_player)
knitr::opts_chunk$set(echo = TRUE)
```
# integrate into shiny
library(fmsb)
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
# Bind the variable ranges to the data
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
# Read the data
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"),]
selected_player_melted <- melt(selected_player, measure.vars = c("Pace", "Shooting", "Passing", "Dribbling", "Defending", "Physicality")) %>%
rename(variable = "Attribute")
knitr::opts_chunk$set(echo = TRUE)
```
# integrate into shiny
library(fmsb)
library(dplyr)
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
# Bind the variable ranges to the data
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
# Read the data
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"),]
selected_player_melted <- melt(selected_player, measure.vars = c("Pace", "Shooting", "Passing", "Dribbling", "Defending", "Physicality")) %>%
rename(variable = "Attribute")
library(dplyr)
library(dplyr)
# integrate into shiny
library(fmsb)
library(dplyr)
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
# Bind the variable ranges to the data
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
# Read the data
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"),]
selected_player_melted <- melt(selected_player, measure.vars = c("Pace", "Shooting", "Passing", "Dribbling", "Defending", "Physicality")) %>%
rename(variable = "Attribute")
# integrate into shiny
library(fmsb)
library(dplyr)
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
# Bind the variable ranges to the data
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
# Read the data
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"),]
selected_player_melted <- melt(selected_player, measure.vars = c("Pace", "Shooting", "Passing", "Dribbling", "Defending", "Physicality")) %>%
rename(variable = "Attribute")
install.packages("dplyr")
install.packages("dplyr")
# integrate into shiny
library(fmsb)
library(dplyr)
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
# Bind the variable ranges to the data
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
# Read the data
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"),]
selected_player_melted <- melt(selected_player, measure.vars = c("Pace", "Shooting", "Passing", "Dribbling", "Defending", "Physicality")) %>%
rename(variable = "Attribute")
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
# data
library(tidyverse)
eafc_data <- read_csv("male_players.csv")
eafc_data
# Attempting to create a search engine
searchData <- function(data, query, column_name) {
result <- data[grep(query, data[["Name"]], ignore.case = TRUE), ]
return(result)
}
user_query <- readline("Player name: ")
search_result <- searchData(eafc_data, user_query, "Name")
print(search_result[, ])
#integrating into shiny
library(shiny)
library(dplyr)
eafc_data <- read.csv("male_players.csv") %>% select(Name, Nation, Club, Position, Overall, Pace, Shooting, Passing, Dribbling, Defending, Physicality)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
textInput("search_query", "Search:")
),
mainPanel(
DT::dataTableOutput("search_result_table")
)
)
)
server <- function(input, output) {
searchData <- reactive({
result <- eafc_data[grep(input$search_query, eafc_data$"Name", ignore.case = TRUE), ]
return(result)
})
output$search_result_table <- DT::renderDataTable({
searchData()
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(dplyr)
eafc_data <- read.csv("male_players.csv") %>% select(Name, Nation, Club, Position, Overall, Pace, Shooting, Passing, Dribbling, Defending, Physicality)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
textInput("search_query", "Search:")
),
mainPanel(
DT::dataTableOutput("search_result_table")
)
)
)
server <- function(input, output) {
searchData <- reactive({
result <- eafc_data[grep(input$search_query, eafc_data$"Name", ignore.case = TRUE), ]
return(result)
})
output$search_result_table <- DT::renderDataTable({
searchData()
})
}
# Run the application
shinyApp(ui = ui, server = server)
# integrate into shiny
library(fmsb)
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
# Bind the variable ranges to the data
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
# Read the data
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"),]
selected_player_melted <- melt(selected_player, measure.vars = c("Pace", "Shooting", "Passing", "Dribbling", "Defending", "Physicality")) %>%
rename(variable = "Attribute")
# integrate into shiny
library(fmsb)
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
# Bind the variable ranges to the data
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
# Read the data
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"),]
# Create a radar chart
radarchart(selected_player, aes(x = variable, y = value))
library(shiny)
library(fmsb)
shinyServer(function(input, output) {
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"), ]
output$radarChart <- renderPlot({
radarchart(selected_player, aes(x = variable, y = value))
})
})
library(shiny)
library(fmsb)
shinyServer(function(input, output) {
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"), ]
output$radarChart <- renderPlot({
radarchart(selected_player, aes(x = variable, y = value))
})
})
shinyServer(function(input, output) {
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"), ]
output$radarChart <- renderPlot({
radarchart(selected_player, aes(x = variable, y = value))
})
})
shinyServer(function(input, output) {
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"), ]
output$radarChart <- renderPlot({
radarchart(selected_player, aes(x = variable, y = value))
})
})
# Create a sidebar panel to allow the user to select a player
sidebarPanel(
selectInput(
inputId = "player_name",
label = "Player:",
choices = male_players$Name,
selected = "Lionel Messi"
)
)
# Create a main panel to display the radar chart
mainPanel(
renderPlot({
radarchart(selected_player())
coord_polar(xlim = c(0, 100), ylim = c(0, 100))
theme_bw()
labs(title = "Radar Chart of FC24 Players", x = "Overall", y = "Attribute")
})
)
# Create a main panel to display the radar chart
mainPanel(
renderPlot({
radarchart(selected_player())
coord_polar(xlim = c(0, 100), ylim = c(0, 100))
theme_bw()
labs(title = "Radar Chart of FC24 Players", x = "Overall", y = "Attribute")
})
)
shinyApp(ui = ui, server = server)
library(shiny)
library(fmsb)
shinyServer(function(input, output) {
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"), ]
output$radarChart <- renderPlot({
radarchart(selected_player, aes(x = variable, y = value))
})
})
library(shiny)
library(fmsb)
shinyServer(function(input, output) {
max_min <- data.frame(
Pace = c(100, 0), Shooting = c(100, 0), Passing = c(100, 0),
Dribbling = c(100, 0), Defending = c(100, 0), Physicality = c(100, 0)
)
rownames(max_min) <- c("Max", "Min")
eafc_data <- rbind(max_min, read.csv("male_players.csv") %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality))
selected_player <- eafc_data[c("Max", "Min", "Lionel Messi"), ]
output$radarChart <- renderPlot({
radarchart(selected_player, aes(x = variable, y = value))
})
})
library(shiny)
library(fmsb)
# Read the data
male_players <- read.csv("male_players.csv")
# Create a reactive variable to store the selected player's data
selected_player <- reactive({
male_players %>%
filter(Name == input$player_name) %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality)
})
# Create a sidebar panel to allow the user to select a player
sidebarPanel(
selectInput(
inputId = "player_name",
label = "Player:",
choices = male_players$Name,
selected = "Lionel Messi"
)
)
# Create a main panel to display the radar chart
mainPanel(
renderPlot({
radarchart(selected_player())
coord_polar(xlim = c(0, 100), ylim = c(0, 100))
theme_bw()
labs(title = "Radar Chart of FC24 Players", x = "Overall", y = "Attribute")
})
)
shinyServer(function(input, output) {
# Read the data
male_players <- read.csv("male_players.csv")
# Create a reactive variable to store the selected player's data
selected_player <- reactive({
male_players %>%
filter(Name == input$player_name) %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality)
})
output$radarChart <- renderPlot({
radarchart(selected_player())
coord_polar(xlim = c(0, 100), ylim = c(0, 100))
theme_bw()
labs(title = "Radar Chart of FC24 Players", x = "Overall", y = "Attribute")
})
})
shinyUI(fluidPage(
titlePanel("Radar Chart of FC24 Players"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "player_name",
label = "Player:",
choices = male_players$Name,
selected = "Lionel Messi"
)
),
shinyServer(function(input, output) {
# Read the data
male_players <- read.csv("male_players.csv")
# Create a reactive variable to store the selected player's data
selected_player <- reactive({
male_players %>%
filter(Name == input$player_name) %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality)
})
output$radarChart <- renderPlot({
radarchart(selected_player())
coord_polar(xlim = c(0, 100), ylim = c(0, 100))
theme_bw()
labs(title = "Radar Chart of FC24 Players", x = "Overall", y = "Attribute")
})
})
mainPanel(
shinyUI(fluidPage(
titlePanel("Radar Chart of FC24 Players"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "player_name",
label = "Player:",
choices = male_players$Name,
selected = "Lionel Messi"
)
),
shinyServer(function(input, output) {
# Read the data
male_players <- read.csv("male_players.csv")
# Create a reactive variable to store the selected player's data
selected_player <- reactive({
male_players %>%
filter(Name == input$player_name) %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality)
})
output$radarChart <- renderPlot({
radarchart(selected_player())
coord_polar(xlim = c(0, 100), ylim = c(0, 100))
theme_bw()
labs(title = "Radar Chart of FC24 Players", x = "Overall", y = "Attribute")
})
})
mainPanel(
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/week12/week12/radar/app.R")
shinyServer(function(input, output) {
# Read the data
male_players <- read.csv("male_players.csv")
# Create a reactive variable to store the selected player's data
selected_player <- reactive({
male_players %>%
filter(Name == input$player_name) %>%
select(Pace, Shooting, Passing, Dribbling, Defending, Physicality)
})
output$radarChart <- renderPlot({
radarchart(selected_player())
coord_polar(xlim = c(0, 100), ylim = c(0, 100))
theme_bw()
labs(title = "Radar Chart of FC24 Players", x = "Overall", y = "Attribute")
})
})
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/week12/week12/radar/app.R")
runApp('radar')
setwd("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/week12/week12")
runApp('radar')
runApp('radar')
shinyApp(ui = ui, server = server)
output$radarChart <- renderPlot({
shinyApp(ui = ui, server = server)
runApp('radar')
runApp('radar')
runApp('radar')
runApp('radar')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/year2sem1/NM2207/search_engine')
runApp('radar')
runApp('radar')
runApp('radar')
